<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.zrf.manage.mapper.BindCardMapper">
  <resultMap id="BaseResultMap" type="com.smart.zrf.manage.domain.entity.BindCard">
    <!--@mbg.generated-->
    <!--@Table bind_card-->
    <id column="card_id" jdbcType="INTEGER" property="cardId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="card_number" jdbcType="VARCHAR" property="cardNumber" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    card_id, user_id, realname, id_number, card_number, phone, `status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from bind_card
    where card_id = #{cardId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from bind_card
    where card_id = #{cardId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="card_id" keyProperty="cardId" parameterType="com.smart.zrf.manage.domain.entity.BindCard" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into bind_card (user_id, realname, id_number, 
      card_number, phone, `status`
      )
    values (#{userId,jdbcType=INTEGER}, #{realname,jdbcType=VARCHAR}, #{idNumber,jdbcType=VARCHAR}, 
      #{cardNumber,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="card_id" keyProperty="cardId" parameterType="com.smart.zrf.manage.domain.entity.BindCard" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into bind_card
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="cardNumber != null">
        card_number,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null">
        #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smart.zrf.manage.domain.entity.BindCard">
    <!--@mbg.generated-->
    update bind_card
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null">
        card_number = #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where card_id = #{cardId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smart.zrf.manage.domain.entity.BindCard">
    <!--@mbg.generated-->
    update bind_card
    set user_id = #{userId,jdbcType=INTEGER},
      realname = #{realname,jdbcType=VARCHAR},
      id_number = #{idNumber,jdbcType=VARCHAR},
      card_number = #{cardNumber,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER}
    where card_id = #{cardId,jdbcType=INTEGER}
  </update>
</mapper>